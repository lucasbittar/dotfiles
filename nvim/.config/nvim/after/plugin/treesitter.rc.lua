-- local status_ok, configs = pcall(require, "nvim-treesitter.configs")
-- if not status_ok then
--     return
-- end

-- local m = require("markid")
-- m.colors = {
--     test = { "#000000" },
--     monokai = { "#a6e22e", "#66d9ef", "#fd971f", "#ae81ff", "#ff6257", "#ffd966", "#7b25f0", "#dfff00" },
-- }

-- m.queries = {
--     default = "(identifier) @markid",
--     javascript = "(member_expression object: (identifier) @markid)"
-- }

-- m.queries.typescript = m.queries.javascript

-- configs.setup({
--     ensure_installed = {
--         "css",
--         "html",
--         "javascript",
--         "json",
--         "lua",
--         "markdown",
--         "tsx",
--         "typescript",
--     }, -- one of "all" or a list of languages
--     sync_install = true,
--     auto_install = true,
--     highlight = {
--         enable = true, -- false will disable the whole extension
--         disable = {}, -- list of language that will be disabled
--     },
--     autopairs = {
--         enable = true,
--     },
--     indent = { enable = true, disable = {} },
--     rainbow = {
--         enable = true,
--         disable = {}, -- List of languages you want to disable the plugin for
--         extended_mode = true, -- Also highlight non-bracket delimiters like html tags, boolean or table: lang -> boolean
--         max_file_lines = nil, -- Do not enable for files with more than n lines, int
--         colors = { "#c724b1", "#7b25f0", "#dfff00", "#f70096", "#44D62C", "#FFAD00", "#4D4DFF" }, -- table of hex strings
--     },
--     context_commentstring = {
--         enable = true,
--         enable_autocmd = false,
--     },
--     markid = {
--         enable = true,
--         colors = m.colors.monokai,
--         queries = m.queries,
--         is_supported = function(lang)
--             local queries = configs.get_module("markid").queries
--             return pcall(vim.treesitter.query.parse, lang, queries[lang] or queries["default"])
--         end,
--     },
-- })
