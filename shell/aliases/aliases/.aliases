#!/bin/bash

# Easier navigation: .., ..., ~ and -
alias ..="cd .."
alias ...="cd ../.."
###

# List directories
alias ll="exa -lh --color=always --group-directories-first"
alias l="exa -lah --color=always --group-directories-first"

# Git
alias push="git push"
alias gp="git pull"
alias gs="git status -sb"
alias ga="git add"
alias gc="git commit -m"
alias gce="git commit --amend"
alias gd="git diff | diff-so-fancy | less"
alias gstp="git subtree push --prefix"
# alias gl="git log --graph --pretty=format:'%C(blue)%h%C(red)%d %C(green)%ar %C(white)%s %C(yellow)(%an)' --abbrev-commit --date=relative"
alias gl="git log --pretty=format:'%Cred%h%Creset %C(bold)%cr%Creset %Cgreen<%an>%Creset %s' --max-count=30"
alias glv="git log | vim -R -" # Populates Vim with git log where I can go to specific hash by pressing <K>
alias glf="git log --follow -p"
alias gco="git checkout"
alias gcb="git checkout -b"
alias nah="git reset --hard;git clean -df;"
alias undocommit="git reset HEAD~"
alias undopush="git push -f origin HEAD^:master" # Undo a `git push`
alias master="git checkout master && git pull"
alias prod="git checkout production && git pull"
alias dev="git checkout develop && git pull"

# Check if git repo
is_in_git_repo() {
  git rev-parse HEAD > /dev/null 2>&1
}

# Lists all branchs available to checkout
gcl() {
  is_in_git_repo &&
    git branch -r |
      grep --invert-match '\*' |
      cut -c 3- |
      fzf --multi --preview="git log --pretty=format:'%Cred%h%Creset %C(bold)%cr%Creset %Cgreen<%an>%Creset %s' --max-count=30" |
      xargs git checkout
}

###

# Tmuxinator
alias tx="tmuxinator"
alias txs="tx start"
alias txe="tx edit"

# Shortcuts
alias g="git"
alias vim="nvim"
alias v="nvim"
alias c="clear"
alias rm="rm -rf --"
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias top="vtop --theme wizard"

if [[ $kernelName == "Darwin" ]];
then
  alias ctags="`brew --prefix`/bin/ctags"
fi
###

# FZF
# Modified version where you can press - CTRL-O to open with `open` command, - CTRL-E or Enter key to open with the $EDITOR
fo() {
  local out file key
  IFS=$'\n' out=("$(fzf-tmux --query="$1" --exit-0 --expect=ctrl-o,ctrl-e)")
  key=$(head -1 <<< "$out")
  file=$(head -2 <<< "$out" | tail -1)
  if [ -n "$file" ]; then
    [ "$key" = ctrl-o ] && open "$file" || ${EDITOR:-vim} "$file"
  fi
}
# tm [SESSION_NAME | FUZZY PATTERN] - create new tmux session, or switch to existing one.
# Running `tm` will let you fuzzy-find a session mame
# Passing an argument to `ftm` will switch to that session if it exists or create it otherwise
ftm() {
  [[ -n "$TMUX" ]] && change="switch-client" || change="attach-session"
  if [ $1 ]; then
    tmux $change -t "$1" 2>/dev/null || (tmux new-session -d -s $1 && tmux $change -t "$1"); return
  fi
  session=$(tmux list-sessions -F "#{session_name}" 2>/dev/null | fzf --exit-0) &&  tmux $change -t "$session" || echo "No sessions found."
}

### Functions

# Search for a file using MacOS Spotlight's metadata
spotlight () { mdfind "kMDItemDisplayName == '$@'wc"; }

# Extract most know archives with one command
extract () {
    if [ -f $1 ] ; then
      case $1 in
        *.tar.bz2)   tar xjf $1     ;;
        *.tar.gz)    tar xzf $1     ;;
        *.bz2)       bunzip2 $1     ;;
        *.rar)       unrar e $1     ;;
        *.gz)        gunzip $1      ;;
        *.tar)       tar xf $1      ;;
        *.tbz2)      tar xjf $1     ;;
        *.tgz)       tar xzf $1     ;;
        *.zip)       unzip $1       ;;
        *.Z)         uncompress $1  ;;
        *.7z)        7z x $1        ;;
        *)     echo "'$1' cannot be extracted via extract()" ;;
          esac
      else
          echo "'$1' is not a valid file"
      fi
}

# List processes owned by my user
my_ps() { ps $@ -u $USER -o pid,%cpu,%mem,start,time,bsdtime,command ; }

# Reload the shell (i.e. invoke as a login shell)
alias reload="exec $SHELL -l"

# Load OS specific aliases.
local kernelName=""
kernelName="$(uname -s)"

if [[ $kernelName == "Darwin" ]];
then
  source ~/Code/dotfiles/shell/aliases/macos/aliases
fi

if [[ $kernelName == "Linux" ]];
then
  source ~/Code/dotfiles/shell/aliases/ubuntu/aliases
fi
